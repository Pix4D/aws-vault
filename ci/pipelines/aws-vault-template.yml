meta:
  docker-creds: &docker-creds
    username: concourse
    password: ((concourse_artifactory_password))
  s3-params: &s3-params
    bucket: ci-pix4d-concourse-pipeline
    region_name: eu-west-1
    access_key_id: ((concourse_user_access_key))
    secret_access_key: ((concourse_user_secret_key))
  artifactory-params: &artifactory-params
    ARTIFACTORY_URL: https://artifactory.ci.pix4d.com/artifactory
    ARTIFACTORY_USER: concourse
    ARTIFACTORY_PASSWORD: ((concourse_artifactory_password))
    CODESIGNER_TOKEN: ((codesigner_token))
  base-job: &base-job
    max_in_flight: 1
    on_success:
      put: cogito
      no_get: true
      inputs: [aws-vault.git]
      params: {state: success}
    on_failure:
      put: cogito
      no_get: true
      inputs: [aws-vault.git]
      params: {state: failure}
    on_error:
      put: cogito
      no_get: true
      inputs: [aws-vault.git]
      params: {state: error}

##########################################################################################

resource_types:
  - name: cogito
    type: registry-image
    check_every: 24h
    source:
      repository: pix4d/cogito
      tag: latest

  - name: keyval
    type: registry-image
    check_every: 24h
    source:
      repository: swce/keyval-resource

##########################################################################################

resources:
  - name: aws-vault.git
    type: git
    icon: git
    webhook_token: ((concourse_gh_webhook))
    source:
      uri: git@github.com:pix4d/aws-vault.git
      private_key: ((github_ssh_key))
      branch: ((branch))
      fetch_tags: true
      disable_ci_skip: true # let the git resource optimize the check step

  - name: cogito
    type: cogito
    check_every: never
    source:
      owner: pix4d
      repo: aws-vault
      access_token: ((github_repo_status_token))
      gchat_webhook: ((gchat_hook))

  - name: archive-linux.s3
    type: s3
    icon: dump-truck
    check_every: never
    source:
      regexp: artifacts/((project))/pci-4398-add-ci-notarize-release/aws-vault-v(\d+\.\d+\.\d+(-.+)*)-linux-amd64.tar.gz
      <<: *s3-params

  - name: codesign-request-id.keyval
    type: keyval
    check_every: never
    source:
      # UUID + BRANCH values to ensure a unique config.
      # Prevents Concourse from merging history with pipelines from other projects and other branches.
      unique-id: 078648fb-3c97-465e-b621-07de48e17c15
      branch: ((branch))

  - name: gh-release
    type: github-release
    check_every: never
    source:
      owner: Pix4D
      repository: aws-vault
      access_token: ((janus_developers_rw_token))

##########################################################################################

jobs:
  - name: fake-request-signature
    <<: *base-job
    plan:
      - get: aws-vault.git
        trigger: false
      - task: fake-request-archive-signature
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: curlimages/curl
          outputs:
            - name: codesign
          run:
            path: /bin/sh
            user: root
            args:
              - -ec
              - |
                echo "REQUEST_ID=683" > codesign/request.properties
      - put: codesign-request-id.keyval
        no_get: true
        inputs: [codesign]
        params:
          file: codesign/request.properties

  - name: smoke-tests-signed
    <<: *base-job
    plan:
      - get: aws-vault.git
        trigger: false
        passed: [fake-request-signature]
      - load_var: version
        file: aws-vault.git/.git/describe_ref
        reveal: true
      - get: codesign-request-id.keyval
        passed: [fake-request-signature]
      - task: fetch-signed-artifacts
        file: aws-vault.git/ci/tasks/fetch-signed-artifacts.yml
        params:
          <<: *artifactory-params
          VERSION: ((.:version))
      - task: smoke-test-darwin
        tags: [sonoma-tester]
        file: aws-vault.git/ci/tasks/smoke-test-darwin.yml
        input_mapping:
          artifacts: signed-artifacts-darwin
        params:
          VERSION: ((.:version))

  - name: release
    <<: *base-job
    disable_manual_trigger: false # only for demo
    plan:
      - get: aws-vault.git
        trigger: true
        passed: [smoke-tests-signed]
      - load_var: version
        reveal: true
        file: aws-vault.git/.git/describe_ref
      - load_var: head_commit
        reveal: true
        file: aws-vault.git/.git/HEAD
      - get: codesign-request-id.keyval
        passed: [smoke-tests-signed]
      - get: archive-linux.s3
        trigger: false
      - task: fetch-signed-artifacts
        file: aws-vault.git/ci/tasks/fetch-signed-artifacts.yml
        params:
          <<: *artifactory-params
          VERSION: ((.:version))
      - task: prepare-release
        file: aws-vault.git/ci/tasks/prepare-release.yml
        params:
          RELEASE_NAME: ((.:version))
          RELEASE_TAG: ((.:version))
          RELEASE_COMMIT: ((.:head_commit))
      - put: gh-release
        no_get: true
        inputs:
          - aws-vault.git
          - final-artifacts
          - release-info
        params:
          name: release-info/name
          tag: release-info/tag
          commitish: release-info/commitish
          generate_release_notes: true
          globs:
            - final-artifacts/*
      - put: cogito
        no_get: true
        inputs: []
        params:
          state: success
          sinks: [gchat]
          chat_message: "Released aws-vault version ((.:version))"
